// Telegram Bot SDK for Swift (unofficial).
// This file is autogenerated by API/generate_wrappers.rb script.

import Foundation
import Dispatch

public extension TelegramBot {
    typealias PromoteChatMemberCompletion = (_ result: Bool?, _ error: DataTaskError?) -> ()

    /// Use this method to promote or demote a user in a supergroup or a channel. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Pass False for all boolean parameters to demote a user. Returns True on success.
    /// - Parameters:
    ///     - chat_id: Unique identifier for the target chat or username of the target channel (in the format @channelusername)
    ///     - user_id: Unique identifier of the target user
    ///     - can_change_info: Pass True, if the administrator can change chat title, photo and other settings
    ///     - can_post_messages: Pass True, if the administrator can create channel posts, channels only
    ///     - can_edit_messages: Pass True, if the administrator can edit messages of other users and can pin messages, channels only
    ///     - can_delete_messages: Pass True, if the administrator can delete messages of other users
    ///     - can_invite_users: Pass True, if the administrator can invite new users to the chat
    ///     - can_restrict_members: Pass True, if the administrator can restrict, ban or unban chat members
    ///     - can_pin_messages: Pass True, if the administrator can pin messages, supergroups only
    ///     - can_promote_members: Pass True, if the administrator can add new administrators with a subset of his own privileges or demote administrators that he has promoted, directly or indirectly (promoted by administrators that were appointed by him)
    /// - Returns: Bool on success. Nil on error, in which case `TelegramBot.lastError` contains the details.
    /// - Note: Blocking version of the method.
    ///
    /// - SeeAlso: <https://core.telegram.org/bots/api#promotechatmember>
    @discardableResult
    public func promoteChatMemberSync(
            chatId: ChatId,
            userId: Int64,
            canChangeInfo: Bool? = nil,
            canPostMessages: Bool? = nil,
            canEditMessages: Bool? = nil,
            canDeleteMessages: Bool? = nil,
            canInviteUsers: Bool? = nil,
            canRestrictMembers: Bool? = nil,
            canPinMessages: Bool? = nil,
            canPromoteMembers: Bool? = nil,
            _ parameters: [String: Any?] = [:]) -> Bool? {
        return requestSync("promoteChatMember", defaultParameters["promoteChatMember"], parameters, [
            "chat_id": chatId,
            "user_id": userId,
            "can_change_info": canChangeInfo,
            "can_post_messages": canPostMessages,
            "can_edit_messages": canEditMessages,
            "can_delete_messages": canDeleteMessages,
            "can_invite_users": canInviteUsers,
            "can_restrict_members": canRestrictMembers,
            "can_pin_messages": canPinMessages,
            "can_promote_members": canPromoteMembers])
    }

    /// Use this method to promote or demote a user in a supergroup or a channel. The bot must be an administrator in the chat for this to work and must have the appropriate admin rights. Pass False for all boolean parameters to demote a user. Returns True on success.
    /// - Parameters:
    ///     - chat_id: Unique identifier for the target chat or username of the target channel (in the format @channelusername)
    ///     - user_id: Unique identifier of the target user
    ///     - can_change_info: Pass True, if the administrator can change chat title, photo and other settings
    ///     - can_post_messages: Pass True, if the administrator can create channel posts, channels only
    ///     - can_edit_messages: Pass True, if the administrator can edit messages of other users and can pin messages, channels only
    ///     - can_delete_messages: Pass True, if the administrator can delete messages of other users
    ///     - can_invite_users: Pass True, if the administrator can invite new users to the chat
    ///     - can_restrict_members: Pass True, if the administrator can restrict, ban or unban chat members
    ///     - can_pin_messages: Pass True, if the administrator can pin messages, supergroups only
    ///     - can_promote_members: Pass True, if the administrator can add new administrators with a subset of his own privileges or demote administrators that he has promoted, directly or indirectly (promoted by administrators that were appointed by him)
    /// - Returns: Bool on success. Nil on error, in which case `error` contains the details.
    /// - Note: Asynchronous version of the method.
    ///
    /// - SeeAlso: <https://core.telegram.org/bots/api#promotechatmember>
    public func promoteChatMemberAsync(
            chatId: ChatId,
            userId: Int64,
            canChangeInfo: Bool? = nil,
            canPostMessages: Bool? = nil,
            canEditMessages: Bool? = nil,
            canDeleteMessages: Bool? = nil,
            canInviteUsers: Bool? = nil,
            canRestrictMembers: Bool? = nil,
            canPinMessages: Bool? = nil,
            canPromoteMembers: Bool? = nil,
            _ parameters: [String: Any?] = [:],
            queue: DispatchQueue = .main,
            completion: PromoteChatMemberCompletion? = nil) {
        return requestAsync("promoteChatMember", defaultParameters["promoteChatMember"], parameters, [
            "chat_id": chatId,
            "user_id": userId,
            "can_change_info": canChangeInfo,
            "can_post_messages": canPostMessages,
            "can_edit_messages": canEditMessages,
            "can_delete_messages": canDeleteMessages,
            "can_invite_users": canInviteUsers,
            "can_restrict_members": canRestrictMembers,
            "can_pin_messages": canPinMessages,
            "can_promote_members": canPromoteMembers],
            queue: queue, completion: completion)
    }
}

